{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert is_undulating(1212121) == True\n\nTests failed:\nNone",
    "state": null,
    "code": "\n\ndef is_undulating(number):\n    num_str = str(number)\n    if (len(num_str) < 3):\n        return False\n    distinct_digits = set()\n    for i in range((len(num_str) - 1)):\n        if (num_str[i] == num_str[(i + 1)]):\n            return False\n        distinct_digits.add(num_str[i])\n    distinct_digits.add(num_str[(- 1)])\n    return (len(distinct_digits) == 2)\n",
    "full_code": "\n\ndef is_undulating(number):\n    num_str = str(number)\n    if (len(num_str) < 3):\n        return False\n    distinct_digits = set()\n    for i in range((len(num_str) - 1)):\n        if (num_str[i] == num_str[(i + 1)]):\n            return False\n        distinct_digits.add(num_str[i])\n    distinct_digits.add(num_str[(- 1)])\n    return (len(distinct_digits) == 2)\n",
    "task_id": "Mbpp/92",
    "success": true,
    "critique": "",
    "reasoning": ""
}