
[description for function: find_middle_node]
This function takes the head of a linked list as input and aims to find the middle node of the list. It uses two pointers, one moving at a normal pace (slow) and the other moving at double the speed (fast). As the fast pointer traverses the list, it advances two nodes at a time while the slow pointer advances one node at a time. When the fast pointer reaches the end of the list, the slow pointer will be positioned at the middle node. The function then returns this middle node. This approach efficiently determines the middle node in a single pass through the list.

[end of description]
