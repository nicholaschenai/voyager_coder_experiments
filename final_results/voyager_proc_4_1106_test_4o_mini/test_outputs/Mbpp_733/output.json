{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert find_first_occurrence([2, 5, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 1\n\nTests failed:\nNone",
    "state": null,
    "code": "\n\ndef find_first_occurrence(arr, target):\n    (left, right) = (0, (len(arr) - 1))\n    result = (- 1)\n    while (left <= right):\n        mid = ((left + right) // 2)\n        if (arr[mid] == target):\n            result = mid\n            right = (mid - 1)\n        elif (arr[mid] < target):\n            left = (mid + 1)\n        else:\n            right = (mid - 1)\n    return result\n",
    "full_code": "\n\ndef find_first_occurrence(arr, target):\n    (left, right) = (0, (len(arr) - 1))\n    result = (- 1)\n    while (left <= right):\n        mid = ((left + right) // 2)\n        if (arr[mid] == target):\n            result = mid\n            right = (mid - 1)\n        elif (arr[mid] < target):\n            left = (mid + 1)\n        else:\n            right = (mid - 1)\n    return result\n",
    "task_id": "Mbpp/733",
    "success": true,
    "critique": "",
    "reasoning": ""
}