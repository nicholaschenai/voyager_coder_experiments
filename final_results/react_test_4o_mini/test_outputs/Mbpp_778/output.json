{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert pack_consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4])==[[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n\nTests failed:\nNone",
    "state": null,
    "code": "\n\ndef pack_consecutive_duplicates(input_list):\n    if (not input_list):\n        return []\n    result = []\n    temp = [input_list[0]]\n    for i in range(1, len(input_list)):\n        if (input_list[i] == input_list[(i - 1)]):\n            temp.append(input_list[i])\n        else:\n            result.append(temp)\n            temp = [input_list[i]]\n    result.append(temp)\n    return result\n",
    "full_code": "\n\ndef pack_consecutive_duplicates(input_list):\n    if (not input_list):\n        return []\n    result = []\n    temp = [input_list[0]]\n    for i in range(1, len(input_list)):\n        if (input_list[i] == input_list[(i - 1)]):\n            temp.append(input_list[i])\n        else:\n            result.append(temp)\n            temp = [input_list[i]]\n    result.append(temp)\n    return result\n",
    "task_id": "Mbpp/778",
    "success": true,
    "critique": "",
    "reasoning": ""
}